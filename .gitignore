# Logs
logs
*.log
/front-end/npm-debug.log*
/front-end/yarn-debug.log*
/front-end/yarn-error.log*
/front-end/pnpm-debug.log*
/front-end/lerna-debug.log*

/front-end/node_modules
/front-end/dist
/front-end/dist-ssr
/front-end/*.local

# Editor directories and files
/front-end/.vscode/*
/front-end/!.vscode/extensions.json
/front-end/.idea
/front-end/.DS_Store
/front-end/*.suo
/front-end/*.ntvs*
/front-end/*.njsproj
/front-end/*.sln
/front-end/*.sw?

# Env
.env
/back-end/Download/base_certificate_image_url.json


# Git ignore - https://git-scm.com/docs/gitignore


# Byte-compiled / optimized / DLL files
back-end/certificate_generation/__pycache__/
back-end/certificate_generation/*.py[cod]
back-end/certificate_generation/*$py.class

# C extensions
back-end/certificate_generation/*.so

# Distribution / packaging
back-end/certificate_generation/.Python
back-end/certificate_generation/build/
back-end/certificate_generation/develop-eggs/
back-end/certificate_generation/dist/
back-end/certificate_generation/downloads/
back-end/certificate_generation/eggs/
back-end/certificate_generation/.eggs/
back-end/certificate_generation/lib/
back-end/certificate_generation/lib64/
back-end/certificate_generation/parts/
back-end/certificate_generation/sdist/
back-end/certificate_generation/var/
back-end/certificate_generation/wheels/
back-end/certificate_generation/share/python-wheels/
back-end/certificate_generation/*.egg-info/
back-end/certificate_generation/.installed.cfg
back-end/certificate_generation/*.egg
back-end/certificate_generation/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
back-end/certificate_generation/*.manifest
back-end/certificate_generation/*.spec

# Installer logs
back-end/certificate_generation/pip-log.txt
back-end/certificate_generation/pip-delete-this-directory.txt

# Unit test / coverage reports
back-end/certificate_generation/htmlcov/
back-end/certificate_generation/.tox/
back-end/certificate_generation/.nox/
back-end/certificate_generation/.coverage
back-end/certificate_generation/.coverage.*
back-end/certificate_generation/.cache
back-end/certificate_generation/nosetests.xml
back-end/certificate_generation/coverage.xml
back-end/certificate_generation/*.cover
back-end/certificate_generation/*.py,cover
back-end/certificate_generation/.hypothesis/
back-end/certificate_generation/.pytest_cache/
back-end/certificate_generation/cover/

# Translations
back-end/certificate_generation/*.mo
back-end/certificate_generation/*.pot

# Django stuff:
back-end/certificate_generation/*.log
back-end/certificate_generation/local_settings.py
back-end/certificate_generation/db.sqlite3
back-end/certificate_generation/db.sqlite3-journal

# Flask stuff:
back-end/certificate_generation/instance/
back-end/certificate_generation/.webassets-cache

# Scrapy stuff:
back-end/certificate_generation/.scrapy

# Sphinx documentation
back-end/certificate_generation/docs/_build/

# PyBuilder
back-end/certificate_generation/.pybuilder/
back-end/certificate_generation/target/

# Jupyter Notebook
back-end/certificate_generation/.ipynb_checkpoints

# IPython
back-end/certificate_generation/profile_default/
back-end/certificate_generation/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
back-end/certificate_generation/__pypackages__/

# Celery stuff
back-end/certificate_generation/celerybeat-schedule
back-end/certificate_generation/celerybeat.pid

# SageMath parsed files
back-end/certificate_generation/*.sage.py

# Environments
back-end/certificate_generation/.env
back-end/certificate_generation/.venv
back-end/certificate_generation/env/
back-end/certificate_generation/venv/
back-end/certificate_generation/ENV/
back-end/certificate_generation/env.bak/
back-end/certificate_generation/venv.bak/

# Spyder project settings
back-end/certificate_generation/.spyderproject
back-end/certificate_generation/.spyproject

# Rope project settings
back-end/certificate_generation/.ropeproject

# mkdocs documentation
back-end/certificate_generation//site

# mypy
back-end/certificate_generation/.mypy_cache/
back-end/certificate_generation/.dmypy.json
back-end/certificate_generation/dmypy.json

# Pyre type checker
back-end/certificate_generation/.pyre/

# pytype static type analyzer
back-end/certificate_generation/.pytype/

# Ruff (linter)
back-end/certificate_generation/.ruff_cache/

# Cython debug symbols
back-end/certificate_generation/cython_debug/

# PyCharm
back-end/certificate_generation/.idea/
back-end/certificate_generation/!.idea/runConfigurations

# macOS
back-end/certificate_generation/.DS_Store

# Received approval test files
back-end/certificate_generation/*.received.*

# NPM
back-end/certificate_generation/node_modules

back-end/certificate_generation/playground/hello_world/__pycache__/
